name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Download dependencies
        run: make deps

      - name: Run code quality checks
        run: make lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run unit tests
        run: make test-unit

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run integration tests
        run: make test-integration

  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    needs: [ lint, unit-tests, integration-tests ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run all tests with coverage
        run: make test-coverage

      - name: Upload coverage html
        uses: actions/upload-artifact@v5
        with:
          name: coverage-html
          path: coverage/coverage.html

      - name: Upload full coverage
        uses: codecov/codecov-action@v5
        with:
          flags: full

  build:
    name: Build & Test Binary
    runs-on: ubuntu-latest
    needs: full-test-suite

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Build binary
        run: make build

      - name: Test binary help
        run: ./build/xenforo-to-gh-discussions --help

      - name: Test binary dry-run (should fail config validation)
        run: |
          # Capture output and exit code separately
          output=$(./build/xenforo-to-gh-discussions --dry-run --non-interactive 2>&1) || exit_code=$?
          echo "$output"

          # Check that binary failed (non-zero exit) and output contains expected message
          if [ ${exit_code:-0} -ne 0 ] && echo "$output" | grep -q "configuration validation failed"; then
            echo "✓ Configuration validation working correctly"
          else
            echo "✗ Configuration validation not working as expected"
            echo "Exit code: ${exit_code:-0}"
            exit 1
          fi
