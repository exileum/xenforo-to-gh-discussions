name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Check formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Run static analysis
        run: go mod download && go mod verify

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage-unit.out ./test/unit/...

      - name: Upload unit test coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage-unit.out
          flags: unit

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run integration tests
        run: go test -v -race -coverprofile=coverage-integration.out ./test/integration/...

      - name: Upload integration test coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage-integration.out
          flags: integration

  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, integration-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run all tests with coverage
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload full coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: full

  build:
    name: Build & Test Binary
    runs-on: ubuntu-latest
    needs: full-test-suite

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binary
        run: go build -v -o xenforo-to-gh-discussions .

      - name: Test binary help
        run: ./xenforo-to-gh-discussions --help

      - name: Test binary dry-run (should fail config validation)
        run: |
          if ./xenforo-to-gh-discussions --dry-run 2>&1 | grep -q "configuration validation failed"; then
            echo "✓ Configuration validation working correctly"
          else
            echo "✗ Configuration validation not working as expected"
            exit 1
          fi
